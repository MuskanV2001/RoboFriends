{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","cardsArray","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAfF,SAACC,GAEb,OACC,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAG,+BAA2BF,EAAMG,GAAjC,WAA8CC,IAAI,WAC1D,gCACC,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCUCC,EAfC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEXC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAKE,KAAMG,EAAOI,GAAGP,KAAOQ,SAAUL,EAAOI,GAAGC,SAAWP,MAAOE,EAAOI,GAAGN,OAA7FM,MAGnB,OACC,8BACEH,KCKWK,EAdG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OAEC,qBAAKf,UAAW,MAAhB,SACC,uBACCA,UAAW,mCACXgB,KAAK,SACLC,YAAa,gBACbC,SAAUH,OCDCI,G,MARA,SAACpB,GACf,OACC,qBAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACExB,EAAMyB,aCsBKC,E,kDAxBd,WAAa1B,GAAO,IAAD,8BAClB,cAAMA,IACD2B,MAAO,CACXC,UAAU,GAHO,E,qDASnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAIzB,WACC,OAAGG,KAAKJ,MAAMC,SACN,0DAGDG,KAAK/B,MAAMyB,a,GApBQQ,aC2DbC,E,kDApDd,aAAc,IAAD,8BACZ,gBAeDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAfzC,EAAKX,MAAQ,CACZnB,OAAQ,GACRO,YAAa,IAJF,E,qDASb,WAAoB,IAAD,OAClBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAExB,OAAQmC,S,oBAQxC,WAEC,MAA6BZ,KAAKJ,MAA5BnB,EAAN,EAAMA,OAAQO,EAAd,EAAcA,YACR6B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACpC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASjC,EAAYgC,kBAGtD,OAAIvC,EAAOyC,OAMV,sBAAKhD,UAAU,KAAf,UACC,oBAAIA,UAAY,MAAhB,yBACA,cAAC,EAAD,CAAWe,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAQoC,WAVd,2B,GA7BQX,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,SAElDX,M","file":"static/js/main.d67d747f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\t\r\n\treturn(\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img src= {`https://robohash.org/${props.id}?50x50 `} alt='robots'/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{props.name}</h2>\t\r\n\t\t\t\t<p>{props.email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList =({robots}) => {\r\n\r\n\tconst cardsArray = robots.map((user, i) => {\r\n\t\treturn <Card key={i} id={robots[i].id}  name={robots[i].name}  username={robots[i].username}  email={robots[i].email} />\r\n\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{cardsArray}\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn (\r\n\r\n\t\t<div className= 'pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName= 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder ='search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '3px solid white', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor (props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\thasError :false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError:true})\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport {robots} from '../robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\r\n\tonSearchChange = (event) => {\t\t//class method is accessed through an object\r\n\t\tthis.setState({searchfield: event.target.value});\t\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst{robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t}) \r\n\r\n\t\tif(!robots.length){\r\n\t\t\treturn <h1></h1>\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className = \"f1 \">RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange} /> \r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\t\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\t  \r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots';\n\nReactDOM.render( <App/>,  document.getElementById('root') );\n\nreportWebVitals();\n"],"sourceRoot":""}